@{
    ViewData["Title"] = "API Test";
}

<div class="container">
    <h2>API Test Sayfası</h2>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>API Bağlantı Testi</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label>API Base URL:</label>
                        <input type="text" id="apiUrl" class="form-control" value="https://localhost:7155" />
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <button class="btn btn-primary btn-block mb-2" onclick="testBasicConnection()">Temel Bağlantı Testi</button>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-info btn-block mb-2" onclick="testCategories()">Kategoriler Testi</button>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-success btn-block mb-2" onclick="testCourses()">Kurslar Testi</button>
                        </div>
                    </div>

                    <div class="row mt-3">
                        <div class="col-md-6">
                            <button class="btn btn-warning btn-block mb-2" onclick="testWithController()">Controller Üzerinden Test</button>
                        </div>
                        <div class="col-md-6">
                            <button class="btn btn-secondary btn-block mb-2" onclick="clearResults()">Temizle</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>Test Sonuçları</h5>
                </div>
                <div class="card-body">
                    <pre id="results" style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; max-height: 400px; overflow-y: auto;"></pre>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addResult(title, data) {
            const results = document.getElementById('results');
            const timestamp = new Date().toLocaleTimeString();
            results.innerHTML += `\n[${timestamp}] ${title}:\n${JSON.stringify(data, null, 2)}\n${'='.repeat(50)}\n`;
            results.scrollTop = results.scrollHeight;
        }

        function clearResults() {
            document.getElementById('results').innerHTML = '';
        }

        async function testBasicConnection() {
            const apiUrl = document.getElementById('apiUrl').value;

            try {
                addResult('🔄 TEMEL BAĞLANTI TESTİ', { url: apiUrl, status: 'Başlıyor...' });

                // Basit fetch testi
                const response = await fetch(apiUrl);
                addResult('✅ Temel Bağlantı Sonucu', {
                    status: response.status,
                    statusText: response.statusText,
                    ok: response.ok,
                    url: response.url
                });

            } catch (error) {
                addResult('❌ Temel Bağlantı Hatası', {
                    error: error.message,
                    name: error.name
                });
            }
        }

        async function testCategories() {
            const apiUrl = document.getElementById('apiUrl').value;

            try {
                addResult('🔄 KATEGORİLER API TESTİ', { url: `${apiUrl}/api/Categories` });

                const response = await fetch(`${apiUrl}/api/Categories`);
                const data = await response.text();

                addResult('📂 Kategoriler API Sonucu', {
                    status: response.status,
                    statusText: response.statusText,
                    headers: Object.fromEntries(response.headers),
                    data: data ? JSON.parse(data) : 'Boş yanıt'
                });

            } catch (error) {
                addResult('❌ Kategoriler API Hatası', {
                    error: error.message,
                    name: error.name
                });
            }
        }

        async function testCourses() {
            const apiUrl = document.getElementById('apiUrl').value;

            try {
                addResult('🔄 KURSLAR API TESTİ', { url: `${apiUrl}/api/Courses` });

                const response = await fetch(`${apiUrl}/api/Courses`);
                const data = await response.text();

                addResult('📚 Kurslar API Sonucu', {
                    status: response.status,
                    statusText: response.statusText,
                    headers: Object.fromEntries(response.headers),
                    data: data ? JSON.parse(data) : 'Boş yanıt'
                });

            } catch (error) {
                addResult('❌ Kurslar API Hatası', {
                    error: error.message,
                    name: error.name
                });
            }
        }

        async function testWithController() {
            try {
                addResult('🔄 CONTROLLER ÜZERİNDEN TEST', 'HomeController metodları test ediliyor...');

                // Test API endpoint
                const testResponse = await fetch('/Home/TestApi');
                const testData = await testResponse.json();
                addResult('🔧 TestApi Sonucu', testData);

                // Categories test
                const catResponse = await fetch('/Home/GetCategories');
                const catData = await catResponse.json();
                addResult('📂 GetCategories Sonucu', catData);

                // Courses test
                const courseResponse = await fetch('/Home/GetCourses');
                const courseData = await courseResponse.json();
                addResult('📚 GetCourses Sonucu', courseData);

            } catch (error) {
                addResult('❌ Controller Test Hatası', {
                    error: error.message,
                    name: error.name
                });
            }
        }

        // Sayfa yüklendiğinde otomatik test
        window.addEventListener('load', function() {
            addResult('🚀 API TEST SAYFASI', 'Test sayfası hazır. Butonlara tıklayarak testleri başlatın.');
        });
    </script>
}