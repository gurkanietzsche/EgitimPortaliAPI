<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>@ViewData["Title"] - Eğitim Portalı</title>

    <!-- Custom fonts for this template-->
    <link href="~/sbadmin2/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="~/sbadmin2/css/sb-admin-2.min.css" rel="stylesheet">
</head>

<body id="page-top">

    @if (TempData["UserRole"]?.ToString() == "Admin")
    {
        <!-- Admin Template -->
        <!-- Page Wrapper -->
        <div id="wrapper">

            <!-- Sidebar -->
            <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

                <!-- Sidebar - Brand -->
                <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/">
                    <div class="sidebar-brand-icon rotate-n-15">
                        <i class="fas fa-graduation-cap"></i>
                    </div>
                    <div class="sidebar-brand-text mx-3">Eğitim Portalı <sup>Admin</sup></div>
                </a>

                <!-- Divider -->
                <hr class="sidebar-divider my-0">

                <!-- Nav Item - Dashboard -->
                <li class="nav-item active">
                    <a class="nav-link" href="/Home/AdminPanel">
                        <i class="fas fa-fw fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>

                <!-- Divider -->
                <hr class="sidebar-divider">

                <!-- Heading -->
                <div class="sidebar-heading">
                    İçerik Yönetimi
                </div>

                <!-- Nav Item - Pages Collapse Menu -->
                <li class="nav-item">
                    <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseKurslar"
                       aria-expanded="true" aria-controls="collapseKurslar">
                        <i class="fas fa-fw fa-book"></i>
                        <span>Kurslar</span>
                    </a>
                    <div id="collapseKurslar" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                        <div class="bg-white py-2 collapse-inner rounded">
                            <a class="collapse-item" href="#" id="kursListesi">Kurs Listesi</a>
                            <a class="collapse-item" href="#" id="kursEkle">Kurs Ekle</a>
                        </div>
                    </div>
                </li>

                <!-- Nav Item - Categories -->
                <li class="nav-item">
                    <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseKategoriler"
                       aria-expanded="true" aria-controls="collapseKategoriler">
                        <i class="fas fa-fw fa-list"></i>
                        <span>Kategoriler</span>
                    </a>
                    <div id="collapseKategoriler" class="collapse" aria-labelledby="headingCategories" data-parent="#accordionSidebar">
                        <div class="bg-white py-2 collapse-inner rounded">
                            <a class="collapse-item" href="#" id="kategoriListesi">Kategori Listesi</a>
                            <a class="collapse-item" href="#" id="kategoriEkle">Kategori Ekle</a>
                        </div>
                    </div>
                </li>

                <!-- Nav Item - Users -->
                <li class="nav-item">
                    <a class="nav-link" href="#" id="kullaniciListesi">
                        <i class="fas fa-fw fa-users"></i>
                        <span>Kullanıcılar</span>
                    </a>
                </li>

                <!-- Divider -->
                <hr class="sidebar-divider d-none d-md-block">

                <!-- Sidebar Toggler (Sidebar) -->
                <div class="text-center d-none d-md-inline">
                    <button class="rounded-circle border-0" id="sidebarToggle"></button>
                </div>
            </ul>
            <!-- End of Sidebar -->
            <!-- Content Wrapper -->
            <div id="content-wrapper" class="d-flex flex-column">

                <!-- Main Content -->
                <div id="content">

                    <!-- Topbar -->
                    <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                        <!-- Sidebar Toggle (Topbar) -->
                        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                            <i class="fa fa-bars"></i>
                        </button>

                        <!-- Topbar Navbar -->
                        <ul class="navbar-nav ml-auto">

                            <div class="topbar-divider d-none d-sm-block"></div>

                            <!-- Nav Item - User Information -->
                            <li class="nav-item dropdown no-arrow">
                                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <span class="mr-2 d-none d-lg-inline text-gray-600 small">@TempData["UserEmail"]</span>
                                    <img class="img-profile rounded-circle" src="~/sbadmin2/img/undraw_profile.svg">
                                </a>
                                <!-- Dropdown - User Information -->
                                <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                     aria-labelledby="userDropdown">
                                    <a class="dropdown-item" href="/">
                                        <i class="fas fa-home fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Ana Sayfa
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                                        <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                        Çıkış Yap
                                    </a>
                                </div>
                            </li>
                        </ul>
                    </nav>
                    <!-- End of Topbar -->
                    <!-- Begin Page Content -->
                    <div class="container-fluid">
                        <div id="alertContainer"></div>
                        @RenderBody()
                    </div>
                    <!-- /.container-fluid -->

                </div>
                <!-- End of Main Content -->
                <!-- Footer -->
                <footer class="sticky-footer bg-white">
                    <div class="container my-auto">
                        <div class="copyright text-center my-auto">
                            <span>Eğitim Portalı &copy; @DateTime.Now.Year</span>
                        </div>
                    </div>
                </footer>
                <!-- End of Footer -->

            </div>
            <!-- End of Content Wrapper -->

        </div>
        <!-- End of Page Wrapper -->
        <!-- Scroll to Top Button-->
        <a class="scroll-to-top rounded" href="#page-top">
            <i class="fas fa-angle-up"></i>
        </a>
    }
    else
    {
        <!-- Normal Template -->
        <!-- Navigation-->
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container">
                <a class="navbar-brand" href="/">Eğitim Portalı</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item active">
                            <a class="nav-link" href="/">Ana Sayfa</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#kurslar">Kurslar</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        @if (TempData["JWToken"] == null)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/Home/Login">Giriş Yap</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-expanded="false">
                                    @TempData["UserEmail"]
                                </a>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
                                    <a class="dropdown-item" href="#" id="hesabim">Hesabım</a>
                                    <a class="dropdown-item" href="#" id="kurslarim">Kurslarım</a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">Çıkış Yap</a>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Page Content -->
        <div class="container mt-4">
            <div id="alertContainer" class="mb-3"></div>
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>

        <!-- Footer -->
        <footer class="py-5 bg-dark">
            <div class="container">
                <p class="m-0 text-center text-white">Eğitim Portalı &copy; @DateTime.Now.Year</p>
            </div>
        </footer>
    }

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Çıkış yapmak istediğinize emin misiniz?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Mevcut oturumu sonlandırmak için "Çıkış Yap" butonuna tıklayın.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">İptal</button>
                    <button class="btn btn-primary" id="logoutBtn">Çıkış Yap</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="~/sbadmin2/vendor/jquery/jquery.min.js"></script>
    <script src="~/sbadmin2/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="~/sbadmin2/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="~/sbadmin2/js/sb-admin-2.min.js"></script>

    <!-- Genel AJAX hata yönetimi -->
    <script>
        // AJAX hata yönetimi
        $(document).ajaxError(function(event, xhr, settings, error) {
            if (xhr.status === 401) {
                showAlert('danger', 'Oturum süresi doldu, lütfen tekrar giriş yapın.');
                setTimeout(function() {
                    window.location.href = '/Home/Login';
                }, 2000);
            } else if (xhr.status === 403) {
                showAlert('danger', 'Bu işlem için yetkiniz yok.');
            } else if (xhr.status === 404) {
                showAlert('danger', 'İstenilen kaynak bulunamadı.');
            } else if (xhr.status === 500) {
                showAlert('danger', 'Sunucu hatası oluştu: ' + error);
            } else {
                showAlert('danger', 'Bir hata oluştu: ' + error);
            }
        });

        // Uyarı mesajı gösterme
        function showAlert(type, message) {
            var alertBox = $('<div class="alert alert-' + type + ' alert-dismissible fade show" role="alert">' +
                message +
                '<button type="button" class="close" data-dismiss="alert" aria-label="Close">' +
                '<span aria-hidden="true">&times;</span>' +
                '</button>' +
                '</div>');

            $('#alertContainer').append(alertBox);

            // 5 saniye sonra otomatik kapat
            setTimeout(function() {
                alertBox.alert('close');
            }, 5000);
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)

    <script>
        $(document).ready(function() {
            // Çıkış işlemi
            $("#logoutBtn").click(function(e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/Home/Logout",
                    success: function(response) {
                        if (response.success) {
                            window.location.href = "/";
                        }
                    }
                });
            });

            // Sidebar menu click events - ÇALIŞAN LİNKLER
            $("#kursListesi").click(function(e) {
                e.preventDefault();
                // Kurs yönetim sayfasına yönlendir
                window.location.href = "/Home/CourseManagement";
            });

            $("#kursEkle").click(function(e) {
                e.preventDefault();
                // Kurs yönetim sayfasına yönlendir ve modal açılacak şekilde işaretle
                window.location.href = "/Home/CourseManagement?action=add";
            });

            $("#kategoriListesi").click(function(e) {
                e.preventDefault();
                // Kategori yönetim sayfasına yönlendir
                window.location.href = "/Home/CategoryManagement";
            });

            $("#kategoriEkle").click(function(e) {
                e.preventDefault();
                // Kategori yönetim sayfasına yönlendir ve modal açılacak şekilde işaretle
                window.location.href = "/Home/CategoryManagement?action=add";
            });

            $("#kullaniciListesi").click(function(e) {
                e.preventDefault();
                // Kullanıcı yönetim sayfasına yönlendir
                window.location.href = "/Home/UserManagement";
            });

            // Dashboard link'i çalışır durumda
            $('a[href="/Home/AdminPanel"]').click(function(e) {
                window.location.href = "/Home/AdminPanel";
            });

            // Normal kullanıcı menüsü için
            $("#hesabim").click(function(e) {
                e.preventDefault();
                alert("Hesap yönetimi sayfası yakında eklenecektir.");
            });

            $("#kurslarim").click(function(e) {
                e.preventDefault();
                alert("Kurslarım sayfası yakında eklenecektir.");
            });

            // URL parametresi kontrolü - modal açmak için
            if (window.location.href.includes('?action=add')) {
                // Sayfanın tam yüklenmesini bekleyip modalı açalım
                setTimeout(function() {
                    if (window.location.href.includes('CourseManagement')) {
                        $('#addCourseModal').modal('show');
                    } else if (window.location.href.includes('CategoryManagement')) {
                        $('#addCategoryModal').modal('show');
                    } else if (window.location.href.includes('UserManagement')) {
                        $('#addUserModal').modal('show');
                    }
                }, 500);
            }

            // Kurs ve kategori sayfaları yüklenirken AJAX ile veri çekme işlemleri
            if (window.location.pathname.includes('CourseManagement')) {
                loadCourses();
                loadCategories();
            } else if (window.location.pathname.includes('CategoryManagement')) {
                loadCategories();
            } else if (window.location.pathname.includes('UserManagement')) {
                loadUsers();
            }

            // AJAX Kurs işlemleri
            function loadCourses() {
                $.ajax({
                    url: '/Home/GetCourses',
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        if (response.success) {
                            displayCourses(response.data);
                        } else {
                            showAlert('danger', 'Kurslar yüklenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            }

            function displayCourses(courses) {
                var container = $('#coursesContainer');
                if (!container.length) return; // Container yoksa işlem yapma

                container.empty();

                if (!courses || courses.length === 0) {
                    container.html('<div class="alert alert-info">Henüz kurs bulunmamaktadır.</div>');
                    return;
                }

                var table = $('<table class="table table-bordered table-hover">').appendTo(container);
                var thead = $('<thead class="thead-dark">').appendTo(table);
                var tbody = $('<tbody>').appendTo(table);

                // Tablo başlığı
                $('<tr>').appendTo(thead)
                    .append('<th scope="col">#</th>')
                    .append('<th scope="col">Başlık</th>')
                    .append('<th scope="col">Açıklama</th>')
                    .append('<th scope="col">Fiyat</th>')
                    .append('<th scope="col">Kategori</th>')
                    .append('<th scope="col">İşlemler</th>');

                // Tablo verileri
                $.each(courses, function(i, course) {
                    $('<tr>').appendTo(tbody)
                        .append('<td>' + course.id + '</td>')
                        .append('<td>' + course.title + '</td>')
                        .append('<td>' + (course.description.length > 50 ? course.description.substring(0, 50) + '...' : course.description) + '</td>')
                        .append('<td>' + course.price + ' TL</td>')
                        .append('<td>' + (course.category ? course.category.name : 'Kategori yok') + '</td>')
                        .append('<td>' +
                            '<button class="btn btn-sm btn-info mr-1 edit-course" data-id="' + course.id + '"><i class="fas fa-edit"></i></button>' +
                            '<button class="btn btn-sm btn-danger delete-course" data-id="' + course.id + '"><i class="fas fa-trash"></i></button>' +
                            '</td>');
                });
            }

            // Kurs düzenleme modal
            $(document).on('click', '.edit-course', function() {
                var courseId = $(this).data('id');
                $.ajax({
                    url: '/Home/GetCourse',
                    type: 'GET',
                    data: { id: courseId },
                    success: function(response) {
                        if (response.success) {
                            var course = response.data;
                            $('#editCourseId').val(course.id);
                            $('#editTitle').val(course.title);
                            $('#editDescription').val(course.description);
                            $('#editPrice').val(course.price);
                            $('#editCategoriesList').val(course.categoryId);
                            $('#editImageUrl').val(course.imageUrl);
                            $('#editDuration').val(course.duration);
                            $('#editDifficultyLevel').val(course.difficultyLevel);
                            $('#editCourseModal').modal('show');
                        } else {
                            showAlert('danger', 'Kurs bilgileri alınamadı: ' + response.message);
                        }
                    }
                });
            });

            // Kurs silme
            $(document).on('click', '.delete-course', function() {
                var courseId = $(this).data('id');
                if (confirm('Bu kursu silmek istediğinizden emin misiniz?')) {
                    $.ajax({
                        url: '/Home/DeleteCourse',
                        type: 'POST',
                        data: { id: courseId },
                        success: function(response) {
                            if (response.success) {
                                showAlert('success', 'Kurs başarıyla silindi.');
                                loadCourses();
                            } else {
                                showAlert('danger', 'Kurs silinirken hata oluştu: ' + response.message);
                            }
                        }
                    });
                }
            });

            // Kurs ekleme formu gönderimi
            $(document).on('submit', '#addCourseForm', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Home/AddCourse',
                    type: 'POST',
                    data: {
                        title: $('#addTitle').val(),
                        description: $('#addDescription').val(),
                        price: $('#addPrice').val(),
                        categoryId: $('#addCategoriesList').val(),
                        imageUrl: $('#addImageUrl').val(),
                        duration: $('#addDuration').val(),
                        difficultyLevel: $('#addDifficultyLevel').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Kurs başarıyla eklendi.');
                            $('#addCourseModal').modal('hide');
                            $('#addCourseForm')[0].reset();
                            loadCourses();
                        } else {
                            showAlert('danger', 'Kurs eklenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            });

            // Kurs güncelleme formu gönderimi
            $(document).on('submit', '#editCourseForm', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Home/UpdateCourse',
                    type: 'POST',
                    data: {
                        id: $('#editCourseId').val(),
                        title: $('#editTitle').val(),
                        description: $('#editDescription').val(),
                        price: $('#editPrice').val(),
                        categoryId: $('#editCategoriesList').val(),
                        imageUrl: $('#editImageUrl').val(),
                        duration: $('#editDuration').val(),
                        difficultyLevel: $('#editDifficultyLevel').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Kurs başarıyla güncellendi.');
                            $('#editCourseModal').modal('hide');
                            loadCourses();
                        } else {
                            showAlert('danger', 'Kurs güncellenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            });

            // AJAX Kategori işlemleri
            function loadCategories() {
                $.ajax({
                    url: '/Home/GetCategories',
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        if (response.success) {
                            // Kategori listesi sayfasında göster
                            if ($('#categoriesContainer').length) {
                                displayCategories(response.data);
                            }

                            // Kategori dropdown'larını doldur (kurs sayfası için)
                            if ($('#addCategoriesList').length) {
                                populateCategoryDropdowns(response.data);
                            }
                        } else {
                            showAlert('danger', 'Kategoriler yüklenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            }

            function displayCategories(categories) {
                var container = $('#categoriesContainer');
                if (!container.length) return; // Container yoksa işlem yapma

                container.empty();

                if (!categories || categories.length === 0) {
                    container.html('<div class="alert alert-info">Henüz kategori bulunmamaktadır.</div>');
                    return;
                }

                var table = $('<table class="table table-bordered table-hover">').appendTo(container);
                var thead = $('<thead class="thead-dark">').appendTo(table);
                var tbody = $('<tbody>').appendTo(table);

                // Tablo başlığı
                $('<tr>').appendTo(thead)
                    .append('<th scope="col">#</th>')
                    .append('<th scope="col">Ad</th>')
                    .append('<th scope="col">Açıklama</th>')
                    .append('<th scope="col">İşlemler</th>');

                // Tablo verileri
                $.each(categories, function(i, category) {
                    $('<tr>').appendTo(tbody)
                        .append('<td>' + category.id + '</td>')
                        .append('<td>' + category.name + '</td>')
                        .append('<td>' + (category.description || 'Açıklama yok') + '</td>')
                        .append('<td>' +
                            '<button class="btn btn-sm btn-info mr-1 edit-category" data-id="' + category.id + '"><i class="fas fa-edit"></i></button>' +
                            '<button class="btn btn-sm btn-danger delete-category" data-id="' + category.id + '"><i class="fas fa-trash"></i></button>' +
                            '</td>');
                });
            }

            function populateCategoryDropdowns(categories) {
                if (!categories) return;

                var addDropdown = $('#addCategoriesList');
                var editDropdown = $('#editCategoriesList');

                if (addDropdown.length) {
                    addDropdown.empty();
                    $.each(categories, function(i, category) {
                        addDropdown.append($('<option>', {
                            value: category.id,
                            text: category.name
                        }));
                    });
                }

                if (editDropdown.length) {
                    editDropdown.empty();
                    $.each(categories, function(i, category) {
                        editDropdown.append($('<option>', {
                            value: category.id,
                            text: category.name
                        }));
                    });
                }
            }

            // Kategori düzenleme modal
            $(document).on('click', '.edit-category', function() {
                var categoryId = $(this).data('id');
                $.ajax({
                    url: '/Home/GetCategory',
                    type: 'GET',
                    data: { id: categoryId },
                    success: function(response) {
                        if (response.success) {
                            var category = response.data;
                            $('#editCategoryId').val(category.id);
                            $('#editName').val(category.name);
                            $('#editDescription').val(category.description);
                            $('#editCategoryModal').modal('show');
                        } else {
                            showAlert('danger', 'Kategori bilgileri alınamadı: ' + response.message);
                        }
                    }
                });
            });

            // Kategori silme
            $(document).on('click', '.delete-category', function() {
                var categoryId = $(this).data('id');
                if (confirm('Bu kategoriyi silmek istediğinizden emin misiniz?')) {
                    $.ajax({
                        url: '/Home/DeleteCategory',
                        type: 'POST',
                        data: { id: categoryId },
                        success: function(response) {
                            if (response.success) {
                                showAlert('success', 'Kategori başarıyla silindi.');
                                loadCategories();
                            } else {
                                showAlert('danger', 'Kategori silinirken hata oluştu: ' + response.message);
                            }
                        }
                    });
                }
            });

            // Kategori ekleme formu gönderimi
            $(document).on('submit', '#addCategoryForm', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Home/AddCategory',
                    type: 'POST',
                    data: {
                        name: $('#addName').val(),
                        description: $('#addDescription').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Kategori başarıyla eklendi.');
                            $('#addCategoryModal').modal('hide');
                            $('#addCategoryForm')[0].reset();
                            loadCategories();
                        } else {
                            showAlert('danger', 'Kategori eklenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            });

            // Kategori güncelleme formu gönderimi
            $(document).on('submit', '#editCategoryForm', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Home/UpdateCategory',
                    type: 'POST',
                    data: {
                        id: $('#editCategoryId').val(),
                        name: $('#editName').val(),
                        description: $('#editDescription').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Kategori başarıyla güncellendi.');
                            $('#editCategoryModal').modal('hide');
                            loadCategories();
                        } else {
                            showAlert('danger', 'Kategori güncellenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            });

            // AJAX Kullanıcı işlemleri
            function loadUsers() {
                $.ajax({
                    url: '/Home/GetUsers',
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        if (response.success) {
                            displayUsers(response.data);
                        } else {
                            showAlert('danger', 'Kullanıcılar yüklenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            }

            function displayUsers(users) {
                var container = $('#usersContainer');
                if (!container.length) return; // Container yoksa işlem yapma

                container.empty();

                if (!users || users.length === 0) {
                    container.html('<div class="alert alert-info">Henüz kullanıcı bulunmamaktadır.</div>');
                    return;
                }

                var table = $('<table class="table table-bordered table-hover">').appendTo(container);
                var thead = $('<thead class="thead-dark">').appendTo(table);
                var tbody = $('<tbody>').appendTo(table);

                // Tablo başlığı
                $('<tr>').appendTo(thead)
                    .append('<th scope="col">#</th>')
                    .append('<th scope="col">Ad</th>')
                    .append('<th scope="col">Soyad</th>')
                    .append('<th scope="col">Email</th>')
                    .append('<th scope="col">Rol</th>')
                    .append('<th scope="col">İşlemler</th>');

                // Tablo verileri
                $.each(users, function(i, user) {
                    $('<tr>').appendTo(tbody)
                        .append('<td>' + user.id + '</td>')
                        .append('<td>' + user.firstName + '</td>')
                        .append('<td>' + user.lastName + '</td>')
                        .append('<td>' + user.email + '</td>')
                        .append('<td>' + (user.role || 'Belirtilmemiş') + '</td>')
                        .append('<td>' +
                            '<button class="btn btn-sm btn-info mr-1 edit-user" data-id="' + user.id + '"><i class="fas fa-edit"></i></button>' +
                            '<button class="btn btn-sm btn-danger delete-user" data-id="' + user.id + '"><i class="fas fa-trash"></i></button>' +
                            '</td>');
                });
            }

            // Kullanıcı düzenleme modal
            $(document).on('click', '.edit-user', function() {
                var userId = $(this).data('id');
                $.ajax({
                    url: '/Home/GetUser',
                    type: 'GET',
                    data: { id: userId },
                    success: function(response) {
                        if (response.success) {
                            var user = response.data;
                            $('#editUserId').val(user.id);
                            $('#editFirstName').val(user.firstName);
                            $('#editLastName').val(user.lastName);
                            $('#editEmail').val(user.email);
                            $('#editRole').val(user.role);
                            $('#editUserModal').modal('show');
                        } else {
                            showAlert('danger', 'Kullanıcı bilgileri alınamadı: ' + response.message);
                        }
                    }
                });
            });

            // Kullanıcı silme
            $(document).on('click', '.delete-user', function() {
                var userId = $(this).data('id');
                if (confirm('Bu kullanıcıyı silmek istediğinizden emin misiniz?')) {
                    $.ajax({
                        url: '/Home/DeleteUser',
                        type: 'POST',
                        data: { id: userId },
                        success: function(response) {
                            if (response.success) {
                                showAlert('success', 'Kullanıcı başarıyla silindi.');
                                loadUsers();
                            } else {
                                showAlert('danger', 'Kullanıcı silinirken hata oluştu: ' + response.message);
                            }
                        }
                    });
                }
            });

            // Kullanıcı ekleme formu gönderimi
            $(document).on('submit', '#addUserForm', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Home/AddUser',
                    type: 'POST',
                    data: {
                        firstName: $('#addFirstName').val(),
                        lastName: $('#addLastName').val(),
                        email: $('#addEmail').val(),
                        password: $('#addPassword').val(),
                        role: $('#addRole').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Kullanıcı başarıyla eklendi.');
                            $('#addUserModal').modal('hide');
                            $('#addUserForm')[0].reset();
                            loadUsers();
                        } else {
                            showAlert('danger', 'Kullanıcı eklenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            });

            // Kullanıcı güncelleme formu gönderimi
            $(document).on('submit', '#editUserForm', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/Home/UpdateUser',
                    type: 'POST',
                    data: {
                        id: $('#editUserId').val(),
                        firstName: $('#editFirstName').val(),
                        lastName: $('#editLastName').val(),
                        email: $('#editEmail').val(),
                        role: $('#editRole').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', 'Kullanıcı başarıyla güncellendi.');
                            $('#editUserModal').modal('hide');
                            loadUsers();
                        } else {
                            showAlert('danger', 'Kullanıcı güncellenirken hata oluştu: ' + response.message);
                        }
                    }
                });
            });
        });
    </script>
</body>
</html>